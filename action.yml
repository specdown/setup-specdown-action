name: Setup Specdown Action
description: Setup the Specdown on the path
inputs:
  version:
    description: Version of specdown to install
    required: false
    default: 'latest'
outputs:
  version:
    description: The version on the path
    value: ${{ steps.install.outputs.version }}

runs:
  using: composite
  steps:
    - name: Install Specdown
      id: install
      env:
        SPECDOWN_VERSION: ${{ inputs.version }}
        GITHUB_TOKEN: ${{ github.token }}
        GITHUB_ACTOR: ${{ github.actor }}
      run: |
        set -euo pipefail
        
        if [ "$SPECDOWN_VERSION" == "latest" ]; then
            SPECDOWN_URL="https://github.com/specdown/specdown/releases/latest/download/"
        else
            SPECDOWN_URL="https://github.com/specdown/specdown/releases/download/v$SPECDOWN_VERSION/"
        fi
        
        if [ "$RUNNER_OS" == "Linux" ]; then
             SPECDOWN_URL="$SPECDOWN_URL/specdown-x86_64-unknown-linux-gnu"
             BINARY_SUFFIX=""
        elif [ "$RUNNER_OS" == "Windows" ]; then
             SPECDOWN_URL="$SPECDOWN_URL/specdown-x86_64-pc-windows-msvc.exe"
             BINARY_SUFFIX=".exe"
        elif [ "$RUNNER_OS" == "macOS" ]; then
             SPECDOWN_URL="$SPECDOWN_URL/specdown-x86_64-apple-darwin"
             BINARY_SUFFIX=""
        else
             echo "$RUNNER_OS not supported"
             exit 1
        fi
        
        mkdir -p "$RUNNER_TEMP/specdown-bin"
        curl -u "$GITHUB_ACTOR:$GITHUB_TOKEN" -Lo "$RUNNER_TEMP/specdown-bin/specdown$BINARY_SUFFIX" "$SPECDOWN_URL"
        chmod +x "$RUNNER_TEMP/specdown-bin/specdown$BINARY_SUFFIX"
        echo "$RUNNER_TEMP/specdown-bin/" >> "$GITHUB_PATH"
        echo ::set-output "name=version::$( "$RUNNER_TEMP/specdown-bin/specdown$BINARY_SUFFIX" --version | cut -d " " -f2 )"
      shell: bash
branding:
  icon: check-circle
  color: yellow
